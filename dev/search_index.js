var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference-Guide","page":"Reference","title":"Reference Guide","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Model\nadd!\nset_value\nset_fixed!\nParameter\nIndexedParameter","category":"page"},{"location":"reference/#MPSGE.add!","page":"Reference","title":"MPSGE.add!","text":"add!(m,bar)\nFunction that adds an element to the model with a name assignment\nm::Model is always the first Argument\n\n# Options\nParameter::ScalarParameter, ::IndexedParameter\nCommodity::ScalarCommodity, ::IndexedCommodity\nSector::ScalarSector,       ::IndexedSector\nConsumer::ScalarConsumer,   ::IndexedConsumer\nAux::ScalarAux,             ::IndexedAux\n\nExample\n\njulia> S = add!(m, Sector())\n\nProduction::Production\nDemand::DemandFunction\nAuxConstraint::AuxConstraint\n\nExample\n\njulia> add!(m, Production()) \n\n\n\n\n\n","category":"function"},{"location":"reference/#JuMP.set_value","page":"Reference","title":"JuMP.set_value","text":"set_value(P, value::Float64)\nFunction that allows users to set a specific value for a variable, updating the benchmark field.\n\nOptions\n\nParameter::ScalarParameter, ::IndexedParameter\nCommodity::ScalarCommodity, ::IndexedCommodity\nSector::ScalarSector,       ::IndexedSector\nConsumer::ScalarConsumer,   ::IndexedConsumer\nAux::ScalarAux,             ::IndexedAux\n\nExample\n\njulia> set_value(var, 1.3)\n\n\n\n\n\n","category":"function"},{"location":"reference/#MPSGE.set_fixed!","page":"Reference","title":"MPSGE.set_fixed!","text":"set_fixed!(P, true::Boolean)\nFunction that allows users to fix a value for a variable, the benchmark, the value from set_value, or the previous value.\n\nOptions\n\nParameter::ScalarParameter, ::IndexedParameter\nCommodity::ScalarCommodity, ::IndexedCommodity\nSector::ScalarSector,       ::IndexedSector\nConsumer::ScalarConsumer,   ::IndexedConsumer\nAux::ScalarAux,             ::IndexedAux\n\nExample\n\njulia> set_value(var, false)\n\n\n\n\n\n","category":"function"},{"location":"reference/#MPSGE.Parameter","page":"Reference","title":"MPSGE.Parameter","text":"Parameter(:symbol; indices, value::Float64=1., string)\n\nStruct that holds the name, indices if IndexedParameter, value, and optional description of a parameter within the model.\n\nOptions\n\nParameter::ScalarParameter, IndexedParameter\n\nExample\n\njulia> P = add!(Parameter(model, :P, value=1., description=\"Elasticity\"))\njulia> sectors = [:s1, :s2]\njulia> P = add!(Parameter(model, :P, indices=(,sectors), value=1., description=\"Elasticity parameters for X Sector \"))\n\n\n\n\n\n","category":"type"},{"location":"#MPSGE.jl","page":"Home","title":"MPSGE.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TODO: Write documentation","category":"page"}]
}
